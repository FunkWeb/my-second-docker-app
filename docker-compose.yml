volumes:
  pg_data:

services:
  pgsql:
    restart: unless-stopped
    image: postgres:16-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d docker" ]
      interval: 5s
      timeout: 3s
      retries: 10

  valkey:
    restart: unless-stopped
    image: valkey/valkey:8-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "valkey-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10

  worker:
    depends_on: [ pgsql, valkey ]
    restart: unless-stopped
    build:
      context: ./worker
      dockerfile: Dockerfile
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "node", "dist/healthcheck.js" ]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    depends_on: [ pgsql, valkey, worker ]
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env

    ports:
      - "4000:4000"
